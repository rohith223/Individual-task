{"ast":null,"code":"function Validation(values) {\n  let error = {\n    email: '',\n    password: ''\n  };\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.email === '') {\n    error.email = 'Email Should not be empty';\n  } else if (!email_pattern.test(values.email)) {\n    error.email = 'Email format is incorrect';\n  } else {\n    error.email = '';\n  }\n  if (values.password === '') {\n    error.password = 'Password Should not be empty';\n    // } else if (!password_pattern.test(values.password)) {\n    //   error.password =\n    //     'Password must contain at least one digit, one lowercase letter, one uppercase letter, and be at least 8 characters long';\n    // } \n  } else {\n    error.password = '';\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email","password","email_pattern","password_pattern","test","_c","$RefreshReg$"],"sources":["C:/Users/RohithRajaC/OneDrive - JMAN Group Ltd/Desktop/Demo/my-app/src/loginValidation.tsx"],"sourcesContent":["interface ErrorObject {\r\n    email: string;\r\n    password: string;\r\n  }\r\n  \r\n  function Validation(values: { email: string; password: string }): ErrorObject {\r\n    let error: ErrorObject = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  \r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n  \r\n    if (values.email === '') {\r\n      error.email = 'Email Should not be empty';\r\n    } else if (!email_pattern.test(values.email)) {\r\n      error.email = 'Email format is incorrect';\r\n    } else {\r\n        error.email = '';\r\n    }\r\n  \r\n    if (values.password === '') {\r\n      error.password = 'Password Should not be empty';\r\n    // } else if (!password_pattern.test(values.password)) {\r\n    //   error.password =\r\n    //     'Password must contain at least one digit, one lowercase letter, one uppercase letter, and be at least 8 characters long';\r\n    // } \r\n    }\r\n    else {\r\n        error.password = '';\r\n    }\r\n  \r\n    return error;\r\n  }\r\n  \r\n  export default Validation;\r\n  "],"mappings":"AAKE,SAASA,UAAUA,CAACC,MAA2C,EAAe;EAC5E,IAAIC,KAAkB,GAAG;IACvBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAIL,MAAM,CAACE,KAAK,KAAK,EAAE,EAAE;IACvBD,KAAK,CAACC,KAAK,GAAG,2BAA2B;EAC3C,CAAC,MAAM,IAAI,CAACE,aAAa,CAACE,IAAI,CAACN,MAAM,CAACE,KAAK,CAAC,EAAE;IAC5CD,KAAK,CAACC,KAAK,GAAG,2BAA2B;EAC3C,CAAC,MAAM;IACHD,KAAK,CAACC,KAAK,GAAG,EAAE;EACpB;EAEA,IAAIF,MAAM,CAACG,QAAQ,KAAK,EAAE,EAAE;IAC1BF,KAAK,CAACE,QAAQ,GAAG,8BAA8B;IACjD;IACA;IACA;IACA;EACA,CAAC,MACI;IACDF,KAAK,CAACE,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOF,KAAK;AACd;AAACM,EAAA,GA7BQR,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}